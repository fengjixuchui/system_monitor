// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import {StandardTableView, VerticalBox, TabWidget, ScrollView, HorizontalBox, ListView, Palette, Button, LineEdit} from "std-widgets.slint";
import {TableView} from "table_view.slint";
import { TextCopiable } from "text_copiable.slint";


export struct StackWalkInfo {
    event_timestamp: string,
    process_id: string,
    thread_id: string,
    stacks: [string]
}

export global EventsViewData  {
    in property <[string]> column_names;
    in property <[[StandardListViewItem]]> row_data: [];
    callback sort_ascending(int);
    callback sort_descending(int);
    callback row-data-detail(/* row-index */ int) -> string;
    callback stack-walk(/* row-index */ int) -> StackWalkInfo;
    callback row-find(string) -> {result: bool, indexes: [int], error: string};
}

export component EventsView inherits VerticalBox {
    private property <string> row-data-detail-info;
    private property <StackWalkInfo> stacks-info;

    spacing: 2px;
    
    HorizontalBox {
        alignment: space-between;
        text-element := Text {
            text: @tr("Events View");
            font-size: 5mm;
            horizontal-alignment: left;
            vertical-alignment: center;
        }
        Rectangle {
            border-width: 1px;
            border-color: Palette.foreground.darker(5.0);
            width: self.preferred-width;
            HorizontalBox {
                spacing: 2px;
                private property <{result: bool, indexes: [int], error: string}> row-find-info;
                private property <string> find-status;
                private property <int> current-row-index;
                LineEdit {
                    width: 22rem;
                    height: 7mm;
                    placeholder-text: "i.e. process_id = 1 && properties.xxx = 1";
        
                    accepted(text) => {
                        row-find-info = EventsViewData.row-find(text);
                        if row-find-info.result {
                            current-row-index = 0;
                            table_view.set-current-row(row-find-info.indexes[current-row-index])
                        }
                    }
                }
                Text {
                    width: 8rem;
                    height: 7mm;
                    vertical-alignment: center;
                    text: row-find-info.error;
                    color: row-find-info.result ? Palette.foreground : #ec5353;
                }
                Rectangle {
                    width: 6mm;
                    height: 6mm;
                    border-width: ta_up.pressed ? 1px : 0px;
                    border-color: Palette.accent-background;
                    border-radius: 4px;
                    Path {
                        width: 12px;
                        height: 12px;
                        commands: "M6 10.5 C6.27614 10.5 6.5 10.2761 6.5 10 V3.20711 L9.14645 5.85355 C9.34171 6.04882 9.65829 6.04882 9.85355 5.85355 C10.0488 5.65829 10.0488 5.34171 9.85355 5.14645 L6.35355 1.64645 C6.15829 1.45118 5.84171 1.45118 5.64645 1.64645 L2.14645 5.14645 C1.95118 5.34171 1.95118 5.65829 2.14645 5.85355 C2.34171 6.04882 2.65829 6.04882 2.85355 5.85355 L5.5 3.20711 V10 C5.5 10.2761 5.72386 10.5 6 10.5 Z";
                        fill: Palette.foreground.darker(0.5);
                    }
                    ta_up := TouchArea {
                        clicked => {
                            if current-row-index - 1 >= 0 {
                                current-row-index =  current-row-index - 1;
                                table_view.set-current-row(row-find-info.indexes[current-row-index])
                            }
                        }
                    }
                }
                Rectangle {
                    width: 6mm;
                    height: 6mm;
                    border-width: ta_down.pressed ? 1px : 0px;
                    border-color: Palette.accent-background;
                    border-radius: 4px;
                    Path {
                        width: 12px;
                        height: 12px;
                        commands: "M6 1.5 C6.27614 1.5 6.5 1.72386 6.5 2 V8.79289 L9.14645 6.14645 C9.34171 5.95118 9.65829 5.95118 9.85355 6.14645 C10.0488 6.34171 10.0488 6.65829 9.85355 6.85355 L6.35355 10.3536 C6.15829 10.5488 5.84171 10.5488 5.64645 10.3536 L2.14645 6.85355 C1.95118 6.65829 1.95118 6.34171 2.14645 6.14645 C2.34171 5.95118 2.65829 5.95118 2.85355 6.14645 L5.5 8.79289 V2 C5.5 1.72386 5.72386 1.5 6 1.5 Z";
                        fill: Palette.foreground.darker(0.5);
                    }
                    ta_down := TouchArea {
                        clicked => {
                            if current-row-index + 1 < row-find-info.indexes.length {
                                current-row-index =  current-row-index + 1;
                                table_view.set-current-row(row-find-info.indexes[current-row-index])
                            }
                        }
                    }
                }
            }
        }
    }

    table_view := TableView {
        sort-ascending(index) => {
            EventsViewData.sort_ascending(index);
        }
        sort-descending(index) => {
            EventsViewData.sort-descending(index);
        }

        columns: [
            {title: @tr("datetime"), width: 18rem},
            {title: @tr("process_id"), width: 9rem},
            {title: @tr("thread_id"), width: 9rem},
            {title: @tr("event_name"), width: 12rem},
            {title: @tr("opcode_name"), width: 12rem},
            {title: @tr("properties"), width: 50rem},
        ];
        rows: EventsViewData.row_data;

        row-double-clicked(index-row) => {
            root.row-data-detail-info = EventsViewData.row-data-detail(index-row);
            root.stacks-info = EventsViewData.stack-walk(index-row);
            popup.show();
        }
    }
    HorizontalBox {
        height: text.height;
        padding-left: 12px;
        padding-right: 12px;

        text := TextCopiable {
            height: self.font-size + 2px;
            text: @tr("total: {}", EventsViewData.row_data.length);
            font-weight: 500;
            font-size: 1.2rem;
        }
    }

    popup := PopupWindow {
        private property <length> font-size: 1.2rem;
        x: table_view.order-column-width + 15px;
        y: table_view.y + table_view.header-height + 12px;
        width: root.width * 50%;
        height: root.height * 60%;
        min-width: font-size * 20;
        min-height: font-size * 30;
        close-on-click: false;

        Rectangle {
            clip: true;
            background: Palette.background;
            border-color: Palette.border;
            border-width: 1phx;

            VerticalBox {
                HorizontalBox {
                    preferred-height: 1.2rem;
                    alignment: end;
                    Button {
                        text: "close";
                        clicked => {
                            popup.close();
                        }
                    }
                }
                tabs := TabWidget {
                    Tab {
                        title: "event detail";

                        sv := ScrollView {
                            x: 0;
                            y: 0;
                            viewport-width: rect.preferred-width;
                            viewport-height: rect.preferred-height;

                            rect := Rectangle {
                                x: sv.viewport-x;
                                y: sv.viewport-y;
                                background: Palette.background;
                                
                                HorizontalBox {
                                    padding: 12px;
                                    TextCopiable {
                                        width: 100%;
                                        height: 100%;
                                        max-width: 100rem;
                                        horizontal-alignment: left;
                                        vertical-alignment: top;
                                        wrap: word-wrap;
                                        text: root.row-data-detail-info;
                                        font-weight: 500;
                                        font-size: 1.2rem;
                                    }
                                }
                            }
                        }
                    }
                    Tab {
                        title: "stacks";

                        VerticalBox {
                            HorizontalBox {
                                padding-left: 12px;
                                padding-right: 12px;
                                padding-top: 9px;
                                padding-bottom: 9px;

                                TextCopiable {
                                    text: @tr("process id: {}", root.stacks-info.process-id);
                                    font-weight: 500;
                                    font-size: 1.2rem;
                                }
            
                                TextCopiable {
                                    text: @tr("thread id: {}", root.stacks-info.thread-id);
                                    font-weight: 500;
                                    font-size: 1.2rem;
                                }

                                TextCopiable {
                                    text: @tr("event timestamp: {}", root.stacks-info.event-timestamp);
                                    font-weight: 500;
                                    font-size: 1.2rem;
                                }
                            }
                            ListView {
                                for item in root.stacks-info.stacks: Rectangle {
                                    HorizontalLayout {
                                        padding-left: 12px;
                                        padding-right: 12px;
                                        padding-top: 9px;
                                        padding-bottom: 9px;
                                
                                        main-text := TextCopiable {
                                            width: 100%;
                                            height: 100%;
                                            horizontal-alignment: left;
                                            vertical-alignment: center;
                                            text: item;
                                            font-weight: 500;
                                            font-size: 1.2rem;
                                            single-line: true;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
           }
        }
    }
}
