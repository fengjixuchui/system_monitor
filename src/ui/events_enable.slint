// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { HorizontalBox, VerticalBox, ListView, StandardListView, CheckBox, Button, LineEdit, Palette } from "std-widgets.slint";

export struct EventDesc {
    name: string,
    minors: [string]
}

export global EnablesData {
    in property <[EventDesc]> event_descs;
    callback toggled_major(int, bool);
    callback toggled_minor(int, int, bool);
}

export component EventsEnables inherits VerticalBox {
    spacing: 1rem;
    width: 25rem;

    Text {
        text: @tr("Events Enables");
        font-size: 5mm;
        horizontal-alignment: left;
        vertical-alignment: center;
    }
    HorizontalBox {
        is_expand := Rectangle {
            out property <bool> checked: false;

            width: 6mm;
            height: 6mm;
            border-width: ta.pressed ? 1px : 0px;
            border-color: Palette.accent-background;
            border-radius: 4px;

            Text {
                horizontal-alignment: center;
                vertical-alignment: center;
                text: checked ? "-" : "+";
            }
            ta := TouchArea {
                clicked => {
                    checked = !checked;
                }
            }
        }
        LineEdit {
            height: 2rem;
            placeholder-text: "please query events";
        }
    }
    ListView {
        for major[index_major] in EnablesData.event_descs: HorizontalBox {
            major_cb := CheckBox {
                text: major.name;
                toggled => {EnablesData.toggled_major(index_major, self.checked)}
            }
            if is_expand.checked : VerticalBox {
                for minor[index_minor] in major.minors : HorizontalBox {
                    minor_cb := CheckBox {
                        text: minor;
                        toggled => {
                            if (self.checked) {major_cb.checked = true}
                            EnablesData.toggled_minor(index_major, index_minor, self.checked)
                        }
                    }
                }
            }
        }
    }
}
